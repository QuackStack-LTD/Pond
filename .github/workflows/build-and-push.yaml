name: Build and Push Image

on:
  workflow_call:
    inputs:
      context:
        type: string
        default: ./quackstack
      repo:
        type: string
        required: true
        description: Full image repository like ghcr.io/org/name
      tags:
        type: string
        default: latest
        description: Comma separated tags like latest,sha
      platforms:
        type: string
        default: linux/amd64,linux/arm64
      dockerfile:
        type: string
        default: Dockerfile
      build-args:
        type: string
        default: ""
        description: Newline or comma separated list like KEY=VALUE,FOO=BAR
      use-buildx-action:
        type: boolean
        default: true
      push:
        type: boolean
        default: true
    secrets:
      QS_USERNAME:
        required: false
      QS_PAT:
        required: false

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        if: ${{ inputs.use-buildx-action }}
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.QS_USERNAME || github.actor }}
          password: ${{ secrets.QS_PAT || secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: t
        run: |
          IFS=',' read -ra T <<< "${{ inputs.tags }}"
          OUT=()
          for tag in "${T[@]}"; do
            tag="$(echo "$tag" | xargs)"
            [ "$tag" = "sha" ] && tag="${{ github.sha }}"
            OUT+=("--tag" "${{ inputs.repo }}:$tag")
          done
          printf '%s\n' "ARGS=${OUT[*]}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        working-directory: ${{ inputs.context }}
        env:
          BUILD_ARGS: ${{ inputs.build-args }}
        run: |
          set -euo pipefail
          BA=()
          if [ -n "${BUILD_ARGS:-}" ]; then
            # support both comma and newline separated
            echo "$BUILD_ARGS" | tr ',' '\n' | while read -r line; do
              [ -z "$line" ] && continue
              echo "--build-arg" "$line"
            done > /tmp/ba.txt
            mapfile -t BA < /tmp/ba.txt
          fi

          docker buildx build \
            --pull \
            --platform "${{ inputs.platforms }}" \
            --file "${{ inputs.dockerfile }}" \
            ${BA[@]+"${BA[@]}"} \
            ${{ steps.t.outputs.ARGS }} \
            ${{ inputs.push && '--push' || '--load' }} \
            .

      - name: Print pushed references
        if: ${{ inputs.push }}
        run: echo "Pushed ${{ inputs.repo }} with tags ${{ inputs.tags }}"
